apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-broker
  labels:
    app: kafka
spec:
  replicas: 1
  selector:
    matchLabels:
        app: kafka
  template:
    metadata:
      labels:
        app: kafka
    spec:
      containers:
      - name: kafka
        image: bitnami/kafka
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
        ports:
        - containerPort: 9092
          name: internal
        - containerPort: 9093
          name: external
        env:
        - name: KAFKA_BROKER_ID
          value: "1"
        - name: MY_MINIKUBE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP          
        - name: KAFKA_ZOOKEEPER_CONNECT
          valueFrom:
            configMapKeyRef:
              name: kafka-with-helm-config
              key: zookeeper_url
        - name: KAFKA_CFG_ADVERTISED_HOST_NAME
          value: "172.18.104.183"
        - name: KAFKA_CFG_LISTENERS
          value: "CLIENT://:9092,EXTERNAL://0.0.0.0:9093" 
        - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
          value: CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: KAFKA_CFG_ADVERTISED_LISTENERS        
          value: "CLIENT://kafka:9092,EXTERNAL://172.18.104.183:9093"
        - name: KAFKA_INTER_BROKER_LISTENER_NAME
          value: client
        - name: ALLOW_PLAINTEXT_LISTENER
          value: "yes"
        - name: KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE
          value: "true"
---
apiVersion: v1
kind: Service
metadata:
  name: kafka-service
spec:
  type: NodePort
  selector:
    app: kafka
  ports:
    - name: internal
      protocol: TCP
      port: 31001
      nodePort: 31001
      targetPort: internal
    - name: external
      protocol: TCP
      port: 31000
      nodePort: 31000
      targetPort: external